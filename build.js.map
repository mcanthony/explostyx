{"version":3,"sources":["explostyts.js"],"names":[],"mappings":"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","file":"build.js","sourcesContent":["(function (THREE) {\n\n  'use strict';\n\n  let height = window.innerHeight;\n  let width = window.innerWidth;\n\n  const scene = new THREE.Scene();\n  const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n  const r = new THREE.WebGLRenderer({ alpha: true,  antialias: true });\n  const dom = r.domElement;\n  document.body.appendChild(dom);\n\n  window.addEventListener('resize', () => {\n    let height = window.innerHeight;\n    let width = window.innerWidth;\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n    r.setSize(width, height);\n  }, false);\n\n  let mx = window.innerWidth * 0.5;\n  let my = window.innerHeight * 0.5;\n  window.addEventListener('mousemove', (e) => {\n    mx = e.clientX;\n    my = e.clientY;\n  }, false);\n\n  r.setSize(width, height);\n  r.setClearColor(0x000000, 0);\n  dom.style.position = 'absolute';\n  dom.style.top = 0;\n  dom.style.left = 0;\n\n  scene.fog = new THREE.Fog(0x06000a, 10, 15);\n\n  const geometry = new THREE.BoxGeometry(1, 1, 1);\n  const material = new THREE.MeshPhongMaterial( {\n    color: 0xf0f080,\n    shininess: 1,\n    specular: 0x000000,\n    shading: THREE.FlatShading\n  });\n\n  const cubes = [1]\n    .reduce((ac, e) => {\n      while (ac.length < 350) {\n        ac.push(e);\n      }\n      return ac;\n    },[])\n    //.fill(true)\n    .map((c, n) => {\n      const t = Date.now();\n      const xd = Math.random() - 0.5;\n      const x = (Math.cos(xd)) * (Math.cos(t / n));\n      const y = (Math.cos(xd)) * (Math.sin(t / n));\n      const z = Math.sin(xd);\n\n      return [x * 3.5, y* 2, -11];//-z * 0.5 - 12];\n    })\n    .map(function ([x, y, z], i) {\n      var cube = new THREE.Mesh(geometry, material);\n      const {rotation, position} = cube;\n      position.set(x, y, z);\n\n      rotation.y = rotation.x = ((Math.PI * 2) / 3) * i;\n\n      // Move this to userdata\n      cube._rotSpeed = (1 + (Math.random())) * 0.05;\n      cube._vel = new THREE.Vector3();\n      cube._maxVel = 0.1 + (Math.random() * 0.4);\n      cube._fric = 0.992 + (Math.random() * 0.005);\n      return cube;\n    })\n    .map(function (c) {\n      scene.add(c);\n      return c;\n    });\n\n  camera.position.z = 2.9;\n\n  const forePoint = new THREE.PointLight(0xffe5ef, 1.4, 12);\n  forePoint.position.set(0, 0, 2.9);\n  forePoint.lookAt(new THREE.Vector3(0, 0, 1));\n  scene.add(forePoint);\n\n  var mainColor = new THREE.DirectionalLight(0xffc58f, 0.4);\n  mainColor.position.set(0, 1, 1);\n  scene.add(mainColor);\n\n  scene.add(new THREE.AmbientLight(0x242420));\n\n  let last;\n  let start;\n  let dt;\n\n  function cubanimate (time) {\n    if (!last) { last = start = time; }\n    dt = time - last;\n    last = time;\n\n    time *= 0.0001;\n    requestAnimationFrame(cubanimate);\n\n    // Mouse handling\n    const mouseVec = new THREE.Vector3((mx / width) * 2 - 1, -(my / height) * 2 + 1, 0.5);\n    mouseVec.unproject(camera);\n    const mouseDir = mouseVec.sub(camera.position).normalize();\n    const distance = -camera.position.z / mouseDir.z + 12;\n    const pos = camera.position.clone().add(mouseDir.multiplyScalar(distance));\n\n    // Move cubes\n    cubes.forEach(c => {\n      // Rotation\n      c.rotation.x += c._rotSpeed * (Math.sin(Date.now() / 5000));\n      c.rotation.y += c._rotSpeed * (Math.cos(Date.now() / 5000));\n\n      // Velocity\n      const dir = pos.clone().sub(c.position).normalize().multiplyScalar(0.01);\n      c._vel.add(dir).clampScalar(-c._maxVel, c._maxVel);\n      c.position.add(c._vel);\n\n      // Friction\n      c._vel.multiplyScalar(c._fric);\n    });\n\n    r.render(scene, camera);\n  }\n  requestAnimationFrame(cubanimate);\n\n}(\n  window.THREE\n));\n"]}